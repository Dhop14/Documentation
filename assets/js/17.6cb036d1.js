(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{312:function(a,t,e){"use strict";e.r(t);var s=e(10),o=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"how-to-activate-custom-consensus-modules-on-an-existing-komodo-assetchain"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-to-activate-custom-consensus-modules-on-an-existing-komodo-assetchain"}},[a._v("#")]),a._v(" How to Activate Custom Consensus modules on an Existing Komodo Assetchain")]),a._v(" "),t("p",[a._v("If you have an existing assetchain based on Komodo platform without Custom Consensus modules enabled, you can activate it at any time. Komodo daemon now supports the command-line parameter "),t("code",[a._v("-ac_ccactivate=height")]),a._v(" , using which you can activate CC on a non-CC enabled chain in a future block height.")]),a._v(" "),t("h2",{attrs:{id:"example"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[a._v("#")]),a._v(" Example")]),a._v(" "),t("p",[a._v("The first existing chain which doesn't have CC enabled, whose startup command looks like this")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("./komodod "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ac_name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("EXAMPLE "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ac_supply")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("72000000")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-addnode")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("24.54")]),a._v(".206.138 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("\n")])])]),t("p",[a._v("It was a very easy way to start a chain using Komodo technology, with very few parameters. In order to activate CC in this chain, all we have to do is the following:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("./komodod "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ac_name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("EXAMPLE "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ac_supply")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("72000000")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ac_ccactivate")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("140")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-addnode")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("24.54")]),a._v(".206.138 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("\n")])])]),t("p",[t("code",[a._v("-ac_ccactivate=140")]),a._v(" means, Custom Consensus modules are activated at block 140. You can set this parameter to any block height you want the CC to be activated.")]),a._v(" "),t("p",[a._v("As this is a hardforking change, all nodes must update. If the chain is being notarized, Notary Nodes need to update to the new parameters as well for the notarization to continue without disruption past the activation block.")]),a._v(" "),t("p",[a._v("Once CC is activated on a chain, do not change the startup script. If you do, that will create a new fork.")]),a._v(" "),t("p",[a._v("By default, "),t("code",[a._v("-ac_ccactivate=height")]),a._v(" uses "),t("code",[a._v("-ac_cc=2")]),a._v(" (If you "),t("RouterLink",{attrs:{to:"/basic-docs/installations/asset-chain-parameters.html"}},[a._v("recall")]),a._v(", "),t("code",[a._v("-ac_cc")]),a._v(" is the parameter that defines the cluster of chains which can have cross chain Custom Consensus modules). But, you cant add -ac_cc=2 to the command line, as this will create a new fork. "),t("code",[a._v("-ac_ccactivate=height")]),a._v(" will take care of those things automagically.")],1),a._v(" "),t("p",[a._v("Also, addressindex=1 and spentindex=1 need to be in the configuration file, but the daemon will take care of setting this up when "),t("code",[a._v("-ac_ccactivate=height")]),a._v(" is included as a command-line parameter.")])])}),[],!1,null,null,null);t.default=o.exports}}]);