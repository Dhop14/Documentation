(window.webpackJsonp=window.webpackJsonp||[]).push([[326],{620:function(s,t,a){"use strict";a.r(t);var e=a(10),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"blockscout-deployment-guide"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#blockscout-deployment-guide"}},[s._v("#")]),s._v(" Blockscout deployment guide")]),s._v(" "),t("p",[s._v("This guide currently uses the following software versions:")]),s._v(" "),t("ul",[t("li",[s._v("Ubuntu-18.04 (Bionic) server")]),s._v(" "),t("li",[s._v("Openethereum (Parity): "),t("a",{attrs:{href:"https://github.com/openethereum/openethereum/releases/tag/v3.0.1",target:"_blank",rel:"noopener noreferrer"}},[s._v("v3.0.1-stable"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("BlockScout: "),t("code",[s._v("v3.2.0")])])]),s._v(" "),t("h2",{attrs:{id:"general-pre-requirements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#general-pre-requirements"}},[s._v("#")]),s._v(" General Pre-Requirements")]),s._v(" "),t("p",[s._v("Linux(Ubuntu or CentOS) server with root access, "),t("code",[s._v("4+ TB")]),s._v(" storage for "),t("a",{attrs:{href:"https://docs.blockscout.com/for-developers/information-and-settings/database-storage-requirements",target:"_blank",rel:"noopener noreferrer"}},[s._v("BlockScout database"),t("OutboundLink")],1),s._v(", "),t("code",[s._v("2+ TB")]),s._v(" storage for "),t("a",{attrs:{href:"https://openethereum.github.io/wiki/FAQ#what-are-the-parity-ethereum-disk-space-needs-and-overall-hardware-requirements",target:"_blank",rel:"noopener noreferrer"}},[s._v("ETH Mainnet archive node"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("Create a user with sudo privileges, ssh access, domain name, ensure basic server security")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),t("ul",[t("li",[s._v("bash commands below are for reference only, please do not copy/paste them mindlessly, or else you may expect to encounter broken links and weird paths.")]),s._v(" "),t("li",[s._v("Commands marked with "),t("code",[s._v("\\$")]),s._v(" should be executed as your user, under whom the blockscout service will be running. "),t("code",[s._v("\\#")]),s._v(" means the command should be run as root. "),t("code",[s._v("\\=\\#")]),s._v(" commands are executed in psql.")]),s._v(" "),t("li",[t("a",{attrs:{href:"https://docs.blockscout.com/for-developers/information-and-settings/requirements",target:"_blank",rel:"noopener noreferrer"}},[s._v("Blockscout reqs"),t("OutboundLink")],1),s._v(" seems to be outdated, you may use latest stable releases instead. Anyway, you will be notified by BlockScout later if some binary version is not supported.")])])]),s._v(" "),t("h2",{attrs:{id:"openethereum-setup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#openethereum-setup"}},[s._v("#")]),s._v(" Openethereum setup")]),s._v(" "),t("h3",{attrs:{id:"openethereum-pre-install"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#openethereum-pre-install"}},[s._v("#")]),s._v(" Openethereum Pre-Install")]),s._v(" "),t("p",[s._v("Prepare storage")]),s._v(" "),t("p",[s._v("Make sure your user has access to the storage mount/path AE: "),t("code",[s._v("/mnt/openeth/storage/path")])]),s._v(" "),t("h3",{attrs:{id:"get-binary"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get-binary"}},[s._v("#")]),s._v(" Get binary")]),s._v(" "),t("p",[s._v("Install basic deps: "),t("code",[s._v("build-essential cmake libudev-dev")])]),s._v(" "),t("p",[s._v("Download the latest precompiled version from "),t("a",{attrs:{href:"https://github.com/openethereum/openethereum/releases",target:"_blank",rel:"noopener noreferrer"}},[s._v("here"),t("OutboundLink")],1)]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" upgrade "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" libudev-dev "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("zip")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unzip")]),s._v(" build-essential cmake "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://github.com/openethereum/openethereum/releases/download/version/openethereum-linux-version.zip\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unzip")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" openethereum-linux-version.zip "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" openethereum\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" openethereum\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x ./openethereum\n")])])]),t("h3",{attrs:{id:"configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[s._v("#")]),s._v(" Configuration")]),s._v(" "),t("p",[s._v("Create an empty log file")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" /mnt/openeth/storage/path/config/example.log\n")])])]),t("ul",[t("li",[s._v("Write configuration file, AE:")])]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" /mnt/openeth/storage/path/config.toml\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("parity"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nmode "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"active"')]),s._v("\nrelease_track "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"stable"')]),s._v("\nbase_path "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/opt/.local/share/io.parity.ethereum"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("network"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nwarp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("misc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nlog_file "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/mnt/openeth/storage/path/config/example.log"')]),s._v("\n\n")])])]),t("p",[s._v("Prepare the "),t("code",[s._v("systemd")]),s._v(" service file")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" /etc/systemd/system/openethereum.service\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Description")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("OpenEthereum\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("After")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("network.target\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Service"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("User")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("youruser\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Group")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("yourusergroup\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/bin/openethereum "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" /mnt/openeth/storage/path/config.toml --jsonrpc-interface all --jsonrpc-apis  web3,eth,net,parity,pubsub,traces --ws-interface all --fat-db"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("on "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--pruning")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("archive --ws-apis all --ws-origins all --ws-hosts  all\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Restart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("on-failure\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KillSignal")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("SIGHUP\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Install"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("WantedBy")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("default.target\n")])])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),t("p",[s._v("Official instructions can be found "),t("a",{attrs:{href:"https://docs.blockscout.com/for-developers/information-and-settings/client-settings-parity-geth-ganache#parity-client",target:"_blank",rel:"noopener noreferrer"}},[s._v("here"),t("OutboundLink")],1),s._v(".")])]),s._v(" "),t("p",[s._v("Allow the ports used by the openethereum client ("),t("code",[s._v("ports 30303/tcp, 8545/tcp, 8546/tcp")]),s._v(") through your firewall.")]),s._v(" "),t("p",[s._v("Test the "),t("code",[s._v("systemd")]),s._v(" service")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl daemon-reload\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start openetherum\n")])])]),t("p",[s._v("Enable openethereum as service")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" openethereum.service\n")])])]),t("h2",{attrs:{id:"postgresql-setup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#postgresql-setup"}},[s._v("#")]),s._v(" PostgreSQL setup")]),s._v(" "),t("h3",{attrs:{id:"postgresql-pre-install"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#postgresql-pre-install"}},[s._v("#")]),s._v(" PostgreSQL Pre-Install")]),s._v(" "),t("p",[s._v("Prepare and mount storage for BlockScout DB")]),s._v(" "),t("h3",{attrs:{id:"install-postgresql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-postgresql"}},[s._v("#")]),s._v(" Install PostgreSQL")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.postgresql.org/download/",target:"_blank",rel:"noopener noreferrer"}},[s._v("PostgreSQL downloads"),t("OutboundLink")],1),s._v(" page suggests usage of different repositories based on the OS. For example, in Ubuntu:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'echo \"deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--quiet")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-O")]),s._v(" - https://www.postgresql.org/media/keys/ACCC4CF8.asc "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" apt-key "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" -\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" postgresql-10\n")])])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),t("p",[s._v("BlockScout supports psql versions: "),t("code",[s._v("10.3+")]),s._v(", same as in the above example.")])]),s._v(" "),t("h3",{attrs:{id:"postgresql-configuration"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#postgresql-configuration"}},[s._v("#")]),s._v(" PostgreSQL configuration")]),s._v(" "),t("p",[s._v("Create a new user in the OS and set a password using "),t("code",[s._v("adduser")])]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# adduser dbusername\n")])])]),t("p",[s._v("Create a database, user and set userpassword")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" - postgres\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ createuser "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--interactive")]),s._v(" dbusername\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ createdb blockscout\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ psql\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# ALTER "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("USER")]),s._v(" dbusername WITH PASSWORD "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dbuserpassword'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# GRANT ALL PRIVILEGES ON blockscout TO dbusername"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("q\n")])])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("Note")]),s._v(" "),t("p",[s._v("PSQL user should be first created as a general user with "),t("code",[s._v("adduser")]),s._v(". The user's system password should not be the same as their database "),t("code",[s._v("dbuserpassword")]),s._v(". "),t("code",[s._v("dbuserpassword")]),s._v(" will be parsed by BlockScout as part of the DB link, thus it's recommended to omit problematic characters in the database password")])]),s._v(" "),t("p",[s._v("Set your storage path as psql datadir")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" /etc/postgresql/10/main/postgresql.conf\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\ndata_directory "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/mnt/psql/storage/path'")]),s._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# use data in another directory")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),t("p",[s._v("Make sure the PSQL user has the right permissions on storage dir.")]),s._v(" "),t("p",[s._v("Start psql")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start postgresql\n")])])]),t("p",[s._v("Validate data directory path")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" - postgres\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ psql\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# SHOW data_directory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    data_directory\n---------------------\n /mnt/psql/storage/path\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" row"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("q\n")])])]),t("p",[s._v("Make sure your user has blockscout db access")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("# "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" - dbusername\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ psql "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" blockscout\n")])])]),t("p",[s._v("Optionally, you might open the PostgreSQL port on your firewall: "),t("code",[s._v("5432/tcp")]),s._v(" to access it from a remote computer, but we don't recommend it.")]),s._v(" "),t("p",[s._v("Enable postgresql as service")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" postgresql\n")])])]),t("h2",{attrs:{id:"blockscout-dependencies-setup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#blockscout-dependencies-setup"}},[s._v("#")]),s._v(" BlockScout dependencies setup")]),s._v(" "),t("p",[s._v("Get base dependencies from apt: (yum/dnf on CentOS)")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                       automake "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                       libtool inotify-tools "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                       libgmp-dev "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                       libgmp10 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                       build-essential "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                       cmake "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v("\n")])])]),t("h3",{attrs:{id:"erlang"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#erlang"}},[s._v("#")]),s._v(" Erlang")]),s._v(" "),t("p",[s._v("Get official release "),t("a",{attrs:{href:"https://www.erlang-solutions.com/resources/download.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("here"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("Example on Ubuntu:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://packages.erlang-solutions.com/erlang/debian/pool/esl-erlang_version~ubuntu~bionic_amd64.deb\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" ./esl-erlang_version~ubuntu~bionic_amd64.deb\n")])])]),t("p",[s._v("Check version and installation:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ erl "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--version")]),s._v("\n")])])]),t("h3",{attrs:{id:"elixir"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elixir"}},[s._v("#")]),s._v(" Elixir")]),s._v(" "),t("p",[s._v("Download pre-compiled release from "),t("a",{attrs:{href:"https://github.com/elixir-lang/elixir/releases",target:"_blank",rel:"noopener noreferrer"}},[s._v("github"),t("OutboundLink")],1)]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://github.com/elixir-lang/elixir/releases/download/tag/Precompiled.zip\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unzip")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" Precompiled.zip "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" elixir\n")])])]),t("p",[s._v("Add elixir bin to path (for permanent effect, append it to your user bash profile)")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v(':/path/to/elixir/bin"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" ~/.profile\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v(':/path/to/elixir/bin"')]),s._v("\n")])])]),t("p",[s._v("Check version and installation:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ elixir "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--version")]),s._v("\n")])])]),t("h3",{attrs:{id:"node-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-js"}},[s._v("#")]),s._v(" Node.js")]),s._v(" "),t("p",[s._v("You can get Node.js "),t("a",{attrs:{href:"https://nodejs.org/en/download/",target:"_blank",rel:"noopener noreferrer"}},[s._v("here"),t("OutboundLink")],1),s._v(" or in your distro repos:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-sL")]),s._v(" https://deb.nodesource.com/setup_version "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-E")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" -\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" nodejs\n")])])]),t("p",[s._v("Check Node version:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ nodejs "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--version")]),s._v("\n")])])]),t("h2",{attrs:{id:"blockscout-installation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#blockscout-installation"}},[s._v("#")]),s._v(" BlockScout installation")]),s._v(" "),t("p",[s._v("Get latest master from git:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/poanetwork/blockscout\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" blockscout\n")])])]),t("p",[s._v("Generate DB secret and export it to bash:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ mix phx.gen.secret    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in blockscout base dir")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SECRET_KEY_BASE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("generatedAboveSecret/PasteHere"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),t("p",[s._v("Set required env variables, example below is suited for Ethereum Mainnet and Parity(Openethereum)")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ETHEREUM_JSONRPC_HTTP_URL")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://localhost:8545\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("COIN")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ETH\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SUBNETWORK")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Mainnet\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NETWORK")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Ethereum\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DATABASE_URL")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("postgresql://dbusername:dbpassword@localhost:5432/blockscout\n")])])]),t("p",[s._v("Install mix deps, create db, run migrations:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ mix "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" deps.get, local.rebar --force, deps.compile, compile  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in blockscout base dir")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ mix "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" ecto.create, ecto.migrate\n")])])]),t("p",[s._v("Install Node.js deps, build static assets:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" apps/block_scout_web/assets"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" node_modules/webpack/bin/webpack.js "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--mode")]),s._v(" production"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" -\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" apps/explorer "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" -\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ mix phx.digest\n")])])]),t("p",[s._v("Enable SSL:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" apps/block_scout_web"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" mix phx.gen.cert blockscout blockscout.local"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" -\n")])])]),t("p",[s._v("The above command will generate and enable self-signed ssl certs, you need to replace them with real ones.\nYou may use "),t("a",{attrs:{href:"https://certbot.eff.org/instructions",target:"_blank",rel:"noopener noreferrer"}},[s._v("certbot"),t("OutboundLink")],1),s._v(" (letsencrypt) to do it, don't forget to set user permissions and configure the file: "),t("code",[s._v("/path/to/blockscout/config/dev.exs")]),s._v(", see example below:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" /path/to/blockscout/config/dev.exs\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nconfig :block_scout_web, BlockScoutWeb.Endpoint,\n  http: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("port: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n  https: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    port: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4001")]),s._v(",\n    cipher_suite: :strong,\n    certfile: "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"priv/cert/cert.pem"')]),s._v(",\n    keyfile: "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"priv/cert/privkey.pem"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),t("p",[s._v("If using certbot, add cert renewal to crontab")]),s._v(" "),t("h3",{attrs:{id:"set-blockscout-as-systemd-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set-blockscout-as-systemd-service"}},[s._v("#")]),s._v(" Set BlockScout as systemd service")]),s._v(" "),t("p",[s._v("Prepare BlockScout start script. You need to export all required env vars before each run:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" /path/to/blockscout/start.sh\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v(':/home/scout/elixir/bin"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ETHEREUM_JSONRPC_HTTP_URL")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://localhost:8545\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("COIN")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ETH\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SUBNETWORK")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Mainnet\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NETWORK")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Ethereum\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DATABASE_URL")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("postgresql://dbusername:dbpassword@localhost:5432/blockscout\n/path/to/elixir/bin/mix phx.server\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /path/to/blockscout/start.sh\n")])])]),t("p",[s._v("Set your start script as service:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nano")]),s._v(" /etc/systemd/system/blockscout.service\n\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Description")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Blockscout\n "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("After")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("network.target\n\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Service"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("User")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("youruser\n "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Group")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("yourusergroup\n "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("WorkingDirectory")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/full/path/to/blockscout\n "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/bin/bash /path/to/blockscout/start.sh\n "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KillSignal")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("SIGHUP\n\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Install"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("WantedBy")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("default.target\n")])])]),t("p",[s._v("Open explorer ports on firewall "),t("code",[s._v("default 4000/tcp 4001/tcp")])]),s._v(" "),t("p",[s._v("Test run:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start blockscout\n")])])]),t("p",[s._v("Enable blockscout as a service:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" blockscout.service\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);