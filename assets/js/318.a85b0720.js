(window.webpackJsonp=window.webpackJsonp||[]).push([[318],{612:function(t,s,e){"use strict";e.r(s);var a=e(10),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"how-to-generate-address-and-private-key-wif-for-3rd-party-coins-using-passphrase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-to-generate-address-and-private-key-wif-for-3rd-party-coins-using-passphrase"}},[t._v("#")]),t._v(" How to Generate Address and Private Key (WIF) for 3rd Party Coins Using Passphrase")]),t._v(" "),s("p",[t._v("While this guide is intended for Notary Node operators, other users may find it useful too.")]),t._v(" "),s("p",[s("strong",[t._v("Never enter your Notary Node's passphrase into any other computer/server other than your node itself for security purposes.")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),s("p",[t._v("For Notary Nodes, we will need "),s("code",[t._v("Compressed Public Key")]),t._v(" as pubkey, "),s("code",[t._v("Compressed WIF")]),t._v(" as private key and "),s("code",[t._v("Compressed Address")]),t._v(" as the public address.")])]),t._v(" "),s("h2",{attrs:{id:"install-dependencies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-dependencies"}},[t._v("#")]),t._v(" Install dependencies")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" upgrade "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" php-cli php-gmp php-mbstring\n")])])]),s("h2",{attrs:{id:"steps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#steps"}},[t._v("#")]),t._v(" Steps")]),t._v(" "),s("ul",[s("li",[t._v("Clone the repo: "),s("a",{attrs:{href:"https://github.com/DeckerSU/komodo_scripts",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/DeckerSU/komodo_scripts"),s("OutboundLink")],1)])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/DeckerSU/komodo_scripts\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" komodo_scripts\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule init\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" submodule update "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--init")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--recursive")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("Open "),s("code",[t._v("genkomodo.php")]),t._v(" for editing with "),s("code",[t._v("nano genkomodo.php")])])]),t._v(" "),s("li",[s("p",[t._v("To get generate private keys for other coins using your passphrase, change the value on the line "),s("code",[t._v('$passphrase = "myverysecretandstrongpassphrase_noneabletobrute"')]),t._v(". Change only the content inside "),s("code",[t._v('""')]),t._v(" i.e., replace "),s("code",[t._v("myverysecretandstrongpassphrase_noneabletobrute")]),t._v(" with your passphrase.")])]),t._v(" "),s("li",[s("p",[t._v("Alternatively, to generate private keys for other coins using KMD private key, uncomment the following line, and replace the private key with your own. "),s("code",[t._v('// $bitcoinECDSA->setPrivateKeyWithWif("Uqe8cy26KvC2xqfh3aCpKvKjtoLC5YXiDW3iYf4MGSSy1RgMm3V5");')])])]),t._v(" "),s("li",[s("p",[t._v("Next, execute the command: "),s("code",[t._v("php genkomodo.php")]),t._v(" to generate the private keys")])]),t._v(" "),s("li",[s("p",[t._v("Copy and import your private keys (Compressed WIF) into their respective chains, then delete your passphrase from "),s("code",[t._v("genkomodo.php")]),t._v(" for security purposes.")])])]),t._v(" "),s("h2",{attrs:{id:"example-output"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-output"}},[t._v("#")]),t._v(" Example Output")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ php genkomodo.php\n\n             Passphrase: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myverysecretandstrongpassphrase_noneabletobrute'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" BTC "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n         Network Prefix: 00\n  Compressed Public Key: 02a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1\nUncompressed Public Key: 04a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1767ae7bed159fca39dc26e2f9de31817bd32e0d6c5a870801bcd81fb7f1c2030\n            Private Key: 907ece717a8f94e07de7bf6f8b3e9f91abb8858ebf831072cdbb9016ef53bc5d\n         Compressed WIF: L24bEAJSkFCdjoQNEcboWfJdsLGLmkBgfGb4TSHnbhEmU9jenaes\n       Uncompressed WIF: 5JuvXAozwf7G7yjT7Fs2UZhFF85qS6Fez9yCfAMZzFZ7uPJvWtC\n  Compressed Address: 1M68ML9dMZZPEdrjncUCe7ZWadAGUxMNyv\nUncompressed Address: 1Py6QmcHgWsoAjTJeixtXt2uGzMVa5Ym1i\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" LTC "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n         Network Prefix: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n  Compressed Public Key: 02a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1\nUncompressed Public Key: 04a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1767ae7bed159fca39dc26e2f9de31817bd32e0d6c5a870801bcd81fb7f1c2030\n            Private Key: 907ece717a8f94e07de7bf6f8b3e9f91abb8858ebf831072cdbb9016ef53bc5d\n         Compressed WIF: T7trfubd9dBEWe3EnFYfj1r1pBueqqCaUUVKKEvLAfQvz3JFsNhs\n       Uncompressed WIF: 6vDezJMXr5a8bMdJd5ezFxURCbeJdthgkqNNNMNbhhsjbJoAQhU\n  Compressed Address: LfK5cYTTSDoSVSYtxkTVv8dGnqXYZRsn86\nUncompressed Address: LiC3fyv7mB7rRY9TprxBou6fVCimky8MSd\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" KMD "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n         Network Prefix: 3C\n  Compressed Public Key: 02a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1\nUncompressed Public Key: 04a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1767ae7bed159fca39dc26e2f9de31817bd32e0d6c5a870801bcd81fb7f1c2030\n            Private Key: 907ece717a8f94e07de7bf6f8b3e9f91abb8858ebf831072cdbb9016ef53bc5d\n         Compressed WIF: UtrRXqvRFUAtCrCTRAHPH6yroQKUrrTJRmxt2h5U4QTUN1jCxTAh\n       Uncompressed WIF: 7KYb75jv5BgrDCbmW36yhofiBy2vSLpCCWDfJ9dMdZxPWnKicJh\n  Compressed Address: RVNKRr2uxPMxJeDwFnTKjdtiLtcs7UzCZn\nUncompressed Address: RYFHVHVaHLgNEjpW7tx1dQN73Fp6Hu5EXs\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" EMC2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n         Network Prefix: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v("\n  Compressed Public Key: 02a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1\nUncompressed Public Key: 04a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1767ae7bed159fca39dc26e2f9de31817bd32e0d6c5a870801bcd81fb7f1c2030\n            Private Key: 907ece717a8f94e07de7bf6f8b3e9f91abb8858ebf831072cdbb9016ef53bc5d\n         Compressed WIF: T7trfubd9dBEWe3EnFYfj1r1pBueqqCaUUVKKEvLAfQvz3JFsNhs\n       Uncompressed WIF: 6vDezJMXr5a8bMdJd5ezFxURCbeJdthgkqNNNMNbhhsjbJoAQhU\n  Compressed Address: EdF2quz8nWrJDwTbbTTieFYUMGfPsVB5dv\nUncompressed Address: Eg7zuMSo7UAiA34ATZxQY21s3drd3WJM6h\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" AYA "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n         Network Prefix: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v("\n  Compressed Public Key: 02a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1\nUncompressed Public Key: 04a854251adfee222bede8396fed0756985d4ea905f72611740867c7a4ad6488c1767ae7bed159fca39dc26e2f9de31817bd32e0d6c5a870801bcd81fb7f1c2030\n            Private Key: 907ece717a8f94e07de7bf6f8b3e9f91abb8858ebf831072cdbb9016ef53bc5d\n         Compressed WIF: T7trfubd9dBEWe3EnFYfj1r1pBueqqCaUUVKKEvLAfQvz3JFsNhs\n       Uncompressed WIF: 6vDezJMXr5a8bMdJd5ezFxURCbeJdthgkqNNNMNbhhsjbJoAQhU\n  Compressed Address: Abrzzq1FgiDY3c4jMG8Xnzpc4E5xqktXhz\nUncompressed Address: Aejy4GTv1fXwyhfJDNdDgmHzkbHBwVxnvD\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" ETH/ERC20 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   ETH/ERC20 Address: 0x85FE0A232fA144921d880BE72A3C5515e5C17A8c\n")])])]),s("h2",{attrs:{id:"private-key-conversion-in-python"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#private-key-conversion-in-python"}},[t._v("#")]),t._v(" Private Key Conversion in Python")]),t._v(" "),s("p",[t._v("The python script below will return converted Private Keys for all coins with a known "),s("code",[t._v("wiftype")]),t._v(" prefix (or a specific coin if set via runtime param).\nIf the coin you need to convert is not yet available, you need to find the relevant values in the project's source code, e.g. "),s("a",{attrs:{href:"https://github.com/KomodoPlatform/komodo/blob/810d308d0792a560f05937b7989b6868381c1dc8/src/chainparams.cpp#L197-L199",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/KomodoPlatform/komodo/blob/810d308d0792a560f05937b7989b6868381c1dc8/src/chainparams.cpp#L197-L199"),s("OutboundLink")],1),t._v("\nThen PR these values to "),s("a",{attrs:{href:"https://github.com/KomodoPlatform/coins/blob/master/coins",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/KomodoPlatform/coins/blob/master/coins"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"install-dependencies-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-dependencies-2"}},[t._v("#")]),t._v(" Install Dependencies")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" python3-pip\npip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" base58\n")])])]),s("h3",{attrs:{id:"create-script"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-script"}},[t._v("#")]),t._v(" Create Script")]),t._v(" "),s("ul",[s("li",[t._v("Open a file for editing with "),s("code",[t._v("nano convert_private_keys.py")]),t._v(" and input the code below")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/env python3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" requests\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" hashlib\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" base58\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" binascii\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    WIF "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    WIF "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Enter Private Key: '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ncoin_prefixes "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://stats.kmd.io/api/info/coin_prefixes/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"results"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    coin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" coin "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" coin_prefixes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Error: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("coin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(' not in coin_prefixes"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        sys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    coin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("double_sha")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hashlib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sha256"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("binascii"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unhexlify"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hexdigest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" hashlib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sha256"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("binascii"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unhexlify"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hexdigest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\npk "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" binascii"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hexlify"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("base58"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b58decode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("WIF"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\npk_utf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf-8"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" _coin "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" coin_prefixes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    prefix "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" coin_prefixes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("_coin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hex"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wiftype"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    x_key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prefix "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" pk_utf\n    full_key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x_key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" double_sha"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x_key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    WIF "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" base58"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b58encode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("binascii"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unhexlify"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("full_key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf-8'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" coin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" coin  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" _coin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("WIF"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("_coin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token format-spec"}},[t._v(" >18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(": ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("WIF"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Make the script executable with "),s("code",[t._v("chmod +x convert_private_keys.py")])])]),t._v(" "),s("h3",{attrs:{id:"example-output-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-output-2"}},[t._v("#")]),t._v(" Example Output")]),t._v(" "),s("ul",[s("li",[t._v("Run the script, and enter your private key when prompted.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ./convert_private_keys.py\n\nEnter Private Key: L24bEAJSkFCdjoQNEcboWfJdsLGLmkBgfGb4TSHnbhEmU9jenaes\n\n               ABY: PiZMXCJw86756jja4WU8R1fp6CHeeCxrjKAKSnx9sf5ZWRiovtdY\n           ABY-OLD: PRQ6Nsb8mnGo9hi2xMgLpfUqbKtLyNRQQRv4KtFxtha8wmKmiuXz\n              ACTN: UtrRXqvRFUAtCrCTRAHPH6yroQKUrrTJRmxt2h5U4QTUN1jCxTAh\n               AUR: T7trfubd9dBEWe3EnFYfj1r1pBueqqCaUUVKKEvLAfQvz3JFsNhs\n               AVN: L24bEAJSkFCdjoQNEcboWfJdsLGLmkBgfGb4TSHnbhEmU9jenaes\n               AWR: L24bEAJSkFCdjoQNEcboWfJdsLGLmkBgfGb4TSHnbhEmU9jenaes\n               AXE: XG8WgRgp3vq5o8QkGNbg1tVenMXvDYnw2qvxyxcyv4WrsJuCFVK7\n               AXO: UtrRXqvRFUAtCrCTRAHPH6yroQKUrrTJRmxt2h5U4QTUN1jCxTAh\n               AYA: T7trfubd9dBEWe3EnFYfj1r1pBueqqCaUUVKKEvLAfQvz3JFsNhs\n               BCH: L24bEAJSkFCdjoQNEcboWfJdsLGLmkBgfGb4TSHnbhEmU9jenaes\n              BEER: UtrRXqvRFUAtCrCTRAHPH6yroQKUrrTJRmxt2h5U4QTUN1jCxTAh\n               BET: UtrRXqvRFUAtCrCTRAHPH6yroQKUrrTJRmxt2h5U4QTUN1jCxTAh\n              BITN: QTTWP17RzrgkyKoQptSbPt9FLNHupJKVYXGyF4gdL3r7v5iu1gYn\n               BLK: PiZMXCJw86756jja4WU8R1fp6CHeeCxrjKAKSnx9sf5ZWRiovtdY\n               BOT: L24bEAJSkFCdjoQNEcboWfJdsLGLmkBgfGb4TSHnbhEmU9jenaes\n              BOTS: UtrRXqvRFUAtCrCTRAHPH6yroQKUrrTJRmxt2h5U4QTUN1jCxTAh\n              BSTY: XrT2y58QkYVdhCTpUgBFCasbn6LXZDsqgcRVDn1MsyXhzddnJpw9\n       BSTY-segwit: XrT2y58QkYVdhCTpUgBFCasbn6LXZDsqgcRVDn1MsyXhzddnJpw9\n               BTC: L24bEAJSkFCdjoQNEcboWfJdsLGLmkBgfGb4TSHnbhEmU9jenaes\n              BTCH: UtrRXqvRFUAtCrCTRAHPH6yroQKUrrTJRmxt2h5U4QTUN1jCxTAh\n        BTC-segwit: L24bEAJSkFCdjoQNEcboWfJdsLGLmkBgfGb4TSHnbhEmU9jenaes\n              BTCZ: L24bEAJSkFCdjoQNEcboWfJdsLGLmkBgfGb4TSHnbhEmU9jenaes\n               BTE: L24bEAJSkFCdjoQNEcboWfJdsLGLmkBgfGb4TSHnbhEmU9jenaes\n        BTE-segwit: L24bEAJSkFCdjoQNEcboWfJdsLGLmkBgfGb4TSHnbhEmU9jenaes\n               BTX: L24bEAJSkFCdjoQNEcboWfJdsLGLmkBgfGb4TSHnbhEmU9jenaes\n        BTX-segwit: L24bEAJSkFCdjoQNEcboWfJdsLGLmkBgfGb4TSHnbhEmU9jenaes\n               CCL: UtrRXqvRFUAtCrCTRAHPH6yroQKUrrTJRmxt2h5U4QTUN1jCxTAh\n               CDN: QAJFEgPdeYrV2HmsijeooXxGqVtc9Tn3De2i89zSM6LhMRMUJ1wy\n        CDN-segwit: QAJFEgPdeYrV2HmsijeooXxGqVtc9Tn3De2i89zSM6LhMRMUJ1wy\n              CFUN: L24bEAJSkFCdjoQNEcboWfJdsLGLmkBgfGb4TSHnbhEmU9jenaes\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);